#include <iostream>
#include <string>
#include <vector>
#include <curl/curl.h>

class User {
public:
    User(int id, const std::string& name, const std::string& email)
        : id(id), name(name), email(email) {}

    void printDetails() const {
        std::cout << "ID: " << id << ", Name: " << name << ", Email: " << email << std::endl;
    }

    std::string fetchData(const std::string& url) const {
        CURL* curl;
        CURLcode res;
        std::string readBuffer;
        curl = curl_easy_init();
        if(curl) {
            curl_easy_setopt(curl, CURLOPT_URL, url.c_str());
            curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, WriteCallback);
            curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
            res = curl_easy_perform(curl);
            curl_easy_cleanup(curl);
        }
        return readBuffer;
    }

private:
    int id;
    std::string name;
    std::string email;

    static size_t WriteCallback(void* contents, size_t size, size_t nmemb, void* userp) {
        ((std::string*)userp)->append((char*)contents, size * nmemb);
        return size * nmemb;
    }
};

int main() {
    User user(1, "John Doe", "john.doe@example.com");
    user.printDetails();
    std::string data = user.fetchData("https://api.example.com/data");
    std::cout << "Data fetched successfully: " << data << std::endl;
    return 0;
}
